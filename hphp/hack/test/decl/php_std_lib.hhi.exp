[("\\f",
  (Shallow_decl_defs.Fun
     { Typing_defs.fe_deprecated = None;
       fe_type =
       (Rwitness (root|php_std_lib.hhi line 4, characters 10-10),
        (Tfun
           { ft_arity = (Fstandard ()); ft_tparams = [];
             ft_where_constraints = []; ft_params = [];
             ft_implicit_params = { capability = (CapDefaults [4:10-11]) };
             ft_ret =
             { et_enforced = false;
               et_type =
               (Rhint (root|php_std_lib.hhi line 4, characters 15-18),
                (Tprim Tvoid))
               };
             ft_flags =
             (make_ft_flags FSync None ~return_disposable:false
               ~returns_mutable:false ~returns_void_to_rx:false);
             ft_reactive = Nonreactive; ft_ifc_decl = FDPolicied {PUBLIC} }));
       fe_pos = [4:10-11]; fe_php_std_lib = true }));
  ("\\C",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mdecl; sc_final = false;
        sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cnormal;
        sc_name = ([7:7-8], "\\C"); sc_tparams = [];
        sc_where_constraints = []; sc_extends = []; sc_uses = [];
        sc_xhp_attr_uses = []; sc_req_extends = []; sc_req_implements = [];
        sc_implements = []; sc_implements_dynamic = false; sc_consts = [];
        sc_typeconsts = [];
        sc_props =
        [{ Shallow_decl_defs.sp_name = ([9:16-18], "x"); sp_xhp_attr = None;
           sp_type =
           (Some (Rhint (root|php_std_lib.hhi line 9, characters 11-14),
                  (Toption
                     (Rhint (root|php_std_lib.hhi line 9, characters 12-14),
                      (Tprim Tint)))));
           sp_visibility = Private; sp_flags = php_std_lib }
          ];
        sc_sprops =
        [{ Shallow_decl_defs.sp_name = ([12:23-25], "$y");
           sp_xhp_attr = None;
           sp_type =
           (Some (Rhint (root|php_std_lib.hhi line 12, characters 18-21),
                  (Toption
                     (Rhint (root|php_std_lib.hhi line 12, characters 19-21),
                      (Tprim Tint)))));
           sp_visibility = Private; sp_flags = php_std_lib }
          ];
        sc_constructor = None;
        sc_static_methods =
        [{ Shallow_decl_defs.sm_name = ([18:26-27], "g");
           sm_reactivity = None;
           sm_type =
           (Rwitness (root|php_std_lib.hhi line 18, characters 26-26),
            (Tfun
               { ft_arity = (Fstandard ()); ft_tparams = [];
                 ft_where_constraints = []; ft_params = [];
                 ft_implicit_params =
                 { capability = (CapDefaults [18:26-27]) };
                 ft_ret =
                 { et_enforced = false;
                   et_type =
                   (Rhint (root|php_std_lib.hhi line 18, characters 31-34),
                    (Tprim Tvoid))
                   };
                 ft_flags =
                 (make_ft_flags FSync None ~return_disposable:false
                   ~returns_mutable:false ~returns_void_to_rx:false);
                 ft_reactive = Nonreactive; ft_ifc_decl = FDPolicied {PUBLIC}
                 }));
           sm_visibility = Public; sm_deprecated = None;
           sm_flags = php_std_lib }
          ];
        sc_methods =
        [{ Shallow_decl_defs.sm_name = ([15:19-20], "f");
           sm_reactivity = None;
           sm_type =
           (Rwitness (root|php_std_lib.hhi line 15, characters 19-19),
            (Tfun
               { ft_arity = (Fstandard ()); ft_tparams = [];
                 ft_where_constraints = []; ft_params = [];
                 ft_implicit_params =
                 { capability = (CapDefaults [15:19-20]) };
                 ft_ret =
                 { et_enforced = false;
                   et_type =
                   (Rhint (root|php_std_lib.hhi line 15, characters 24-27),
                    (Tprim Tvoid))
                   };
                 ft_flags =
                 (make_ft_flags FSync None ~return_disposable:false
                   ~returns_mutable:false ~returns_void_to_rx:false);
                 ft_reactive = Nonreactive; ft_ifc_decl = FDPolicied {PUBLIC}
                 }));
           sm_visibility = Public; sm_deprecated = None;
           sm_flags = php_std_lib }
          ];
        sc_user_attributes =
        [{ Typing_defs_core.ua_name = ([6:3-14], "__PHPStdLib");
           ua_classname_params = [] }
          ];
        sc_enum_type = None }))
  ]

They matched!
