[("\\A",
  (Shallow_decl_defs.Class
     { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
       sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cnormal;
       sc_name = ([3:7-8], "\\A"); sc_tparams = [];
       sc_where_constraints = []; sc_extends = []; sc_uses = [];
       sc_xhp_attr_uses = []; sc_req_extends = []; sc_req_implements = [];
       sc_implements =
       [(Rhint (root|explicit_type_collection.php line 3, characters 20-36),
         (Tapply (([3:20-37], "\\HH\\ClassAttribute"), [])))];
       sc_implements_dynamic = false; sc_consts = []; sc_typeconsts = [];
       sc_props =
       [{ Shallow_decl_defs.sp_name = ([4:49-51], "i"); sp_xhp_attr = None;
          sp_type =
          (Some (Rhint (root|explicit_type_collection.php line 4, characters 38-47),
                 (Tapply (([4:38-41], "\\HH\\vec"),
                    [(Rhint (root|explicit_type_collection.php line 4, characters 42-46),
                      Tmixed)]
                    ))));
          sp_visibility = Public; sp_flags = needs_init }
         ];
       sc_sprops = [];
       sc_constructor =
       (Some { Shallow_decl_defs.sm_name = ([4:19-30], "__construct");
               sm_reactivity = None;
               sm_type =
               (Rwitness (root|explicit_type_collection.php line 4, characters 19-29),
                (Tfun
                   { ft_arity = (Fstandard ()); ft_tparams = [];
                     ft_where_constraints = [];
                     ft_params =
                     [{ fp_pos = [4:49-51]; fp_name = (Some "$i");
                        fp_type =
                        { et_enforced = false;
                          et_type =
                          (Rhint (root|explicit_type_collection.php line 4, characters 38-47),
                           (Tapply (([4:38-41], "\\HH\\vec"),
                              [(Rhint (root|explicit_type_collection.php line 4, characters 42-46),
                                Tmixed)]
                              )))
                          };
                        fp_rx_annotation = None;
                        fp_flags =
                        (make_fp_flags ~mutability:None
                          ~accept_disposable:false ~has_default:false
                          ~mode:Typing_defs_core.FPnormal ~ifc_external:false
                          ~ifc_can_call:false ~is_atom:false ~readonly:false);
                         }
                       ];
                     ft_implicit_params =
                     { capability = (CapDefaults [4:19-30]) };
                     ft_ret =
                     { et_enforced = false;
                       et_type =
                       (Rwitness (root|explicit_type_collection.php line 4, characters 19-29),
                        (Tprim Tvoid))
                       };
                     ft_flags =
                     (make_ft_flags FSync None ~return_disposable:false
                       ~returns_mutable:false ~returns_void_to_rx:false
                       ~returns_readonly:false ~readonly_this:false);
                     ft_reactive = Nonreactive;
                     ft_ifc_decl = FDPolicied {PUBLIC} }));
               sm_visibility = Public; sm_deprecated = None;
               sm_flags = (empty) });
       sc_static_methods = []; sc_methods = []; sc_user_attributes = [];
       sc_enum_type = None }));
  ("\\Foo",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cnormal;
        sc_name = ([8:7-10], "\\Foo"); sc_tparams = [];
        sc_where_constraints = []; sc_extends = []; sc_uses = [];
        sc_xhp_attr_uses = []; sc_req_extends = []; sc_req_implements = [];
        sc_implements = []; sc_implements_dynamic = false;
        sc_consts =
        [{ Shallow_decl_defs.scc_abstract = false;
           scc_name = ([9:16-19], "KEY");
           scc_type =
           (Rhint (root|explicit_type_collection.php line 9, characters 9-14),
            (Tprim Tstring))
           }
          ];
        sc_typeconsts = []; sc_props = []; sc_sprops = [];
        sc_constructor = None; sc_static_methods = []; sc_methods = [];
        sc_user_attributes =
        [{ Typing_defs_core.ua_name = ([7:3-4], "\\A");
           ua_classname_params = [] }
          ];
        sc_enum_type = None }));
  ("\\Bar",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cnormal;
        sc_name = ([15:7-10], "\\Bar"); sc_tparams = [];
        sc_where_constraints = []; sc_extends = []; sc_uses = [];
        sc_xhp_attr_uses = []; sc_req_extends = []; sc_req_implements = [];
        sc_implements = []; sc_implements_dynamic = false; sc_consts = [];
        sc_typeconsts = []; sc_props = []; sc_sprops = [];
        sc_constructor = None; sc_static_methods = []; sc_methods = [];
        sc_user_attributes =
        [{ Typing_defs_core.ua_name = ([12:3-4], "\\A");
           ua_classname_params = [] }
          ];
        sc_enum_type = None }))
  ]

They matched!
