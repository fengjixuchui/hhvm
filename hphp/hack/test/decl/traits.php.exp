[("\\TMyTrait",
  (Shallow_decl_defs.Class
     { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
       sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Ctrait;
       sc_name = ([3:7-15], "\\TMyTrait"); sc_tparams = [];
       sc_where_constraints = []; sc_extends = []; sc_uses = [];
       sc_xhp_attr_uses = []; sc_req_extends = []; sc_req_implements = [];
       sc_implements = []; sc_implements_dynamic = false; sc_consts = [];
       sc_typeconsts = []; sc_props = []; sc_sprops = [];
       sc_constructor = None; sc_static_methods = [];
       sc_methods =
       [{ Shallow_decl_defs.sm_name = ([4:19-28], "doNothing");
          sm_reactivity = None;
          sm_type =
          (Rwitness (root|traits.php line 4, characters 19-27),
           (Tfun
              { ft_arity = (Fstandard ()); ft_tparams = [];
                ft_where_constraints = []; ft_params = [];
                ft_implicit_params = { capability = (CapDefaults [4:19-28]) };
                ft_ret =
                { et_enforced = false;
                  et_type =
                  (Rhint (root|traits.php line 4, characters 32-35),
                   (Tprim Tvoid))
                  };
                ft_flags =
                (make_ft_flags FSync None ~return_disposable:false
                  ~returns_mutable:false ~returns_void_to_rx:false);
                ft_reactive = Nonreactive; ft_ifc_decl = FDPolicied {PUBLIC}
                }));
          sm_visibility = Public; sm_deprecated = None; sm_flags = (empty) }
         ];
       sc_user_attributes = []; sc_enum_type = None }));
  ("\\TMyTrait2",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Ctrait;
        sc_name = ([7:7-16], "\\TMyTrait2"); sc_tparams = [];
        sc_where_constraints = []; sc_extends = [];
        sc_uses =
        [(Rhint (root|traits.php line 8, characters 7-14),
          (Tapply (([8:7-15], "\\TMyTrait"), [])))];
        sc_xhp_attr_uses = []; sc_req_extends = []; sc_req_implements = [];
        sc_implements = []; sc_implements_dynamic = false; sc_consts = [];
        sc_typeconsts = []; sc_props = []; sc_sprops = [];
        sc_constructor = None; sc_static_methods = [];
        sc_methods =
        [{ Shallow_decl_defs.sm_name = ([10:19-32], "doMoreNothing");
           sm_reactivity = None;
           sm_type =
           (Rwitness (root|traits.php line 10, characters 19-31),
            (Tfun
               { ft_arity = (Fstandard ()); ft_tparams = [];
                 ft_where_constraints = []; ft_params = [];
                 ft_implicit_params =
                 { capability = (CapDefaults [10:19-32]) };
                 ft_ret =
                 { et_enforced = false;
                   et_type =
                   (Rhint (root|traits.php line 10, characters 36-39),
                    (Tprim Tvoid))
                   };
                 ft_flags =
                 (make_ft_flags FSync None ~return_disposable:false
                   ~returns_mutable:false ~returns_void_to_rx:false);
                 ft_reactive = Nonreactive; ft_ifc_decl = FDPolicied {PUBLIC}
                 }));
           sm_visibility = Public; sm_deprecated = None; sm_flags = (empty) }
          ];
        sc_user_attributes = []; sc_enum_type = None }));
  ("\\TMyTrait3",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Ctrait;
        sc_name = ([13:7-16], "\\TMyTrait3"); sc_tparams = [];
        sc_where_constraints = []; sc_extends = []; sc_uses = [];
        sc_xhp_attr_uses = []; sc_req_extends = []; sc_req_implements = [];
        sc_implements = []; sc_implements_dynamic = false; sc_consts = [];
        sc_typeconsts = []; sc_props = []; sc_sprops = [];
        sc_constructor = None; sc_static_methods = [];
        sc_methods =
        [{ Shallow_decl_defs.sm_name = ([14:19-35], "doYetMoreNothing");
           sm_reactivity = None;
           sm_type =
           (Rwitness (root|traits.php line 14, characters 19-34),
            (Tfun
               { ft_arity = (Fstandard ()); ft_tparams = [];
                 ft_where_constraints = []; ft_params = [];
                 ft_implicit_params =
                 { capability = (CapDefaults [14:19-35]) };
                 ft_ret =
                 { et_enforced = false;
                   et_type =
                   (Rhint (root|traits.php line 14, characters 39-42),
                    (Tprim Tvoid))
                   };
                 ft_flags =
                 (make_ft_flags FSync None ~return_disposable:false
                   ~returns_mutable:false ~returns_void_to_rx:false);
                 ft_reactive = Nonreactive; ft_ifc_decl = FDPolicied {PUBLIC}
                 }));
           sm_visibility = Public; sm_deprecated = None; sm_flags = (empty) }
          ];
        sc_user_attributes = []; sc_enum_type = None }));
  ("\\MyTraitUsingClass",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cnormal;
        sc_name = ([17:7-24], "\\MyTraitUsingClass"); sc_tparams = [];
        sc_where_constraints = []; sc_extends = [];
        sc_uses =
        [(Rhint (root|traits.php line 18, characters 7-15),
          (Tapply (([18:7-16], "\\TMyTrait2"), [])));
          (Rhint (root|traits.php line 19, characters 7-15),
           (Tapply (([19:7-16], "\\TMyTrait3"), [])))
          ];
        sc_xhp_attr_uses = []; sc_req_extends = []; sc_req_implements = [];
        sc_implements = []; sc_implements_dynamic = false; sc_consts = [];
        sc_typeconsts = []; sc_props = []; sc_sprops = [];
        sc_constructor = None; sc_static_methods = []; sc_methods = [];
        sc_user_attributes = []; sc_enum_type = None }))
  ]

They matched!
