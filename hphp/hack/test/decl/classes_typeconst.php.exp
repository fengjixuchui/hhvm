[("\\C",
  (Shallow_decl_defs.Class
     { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
       sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cnormal;
       sc_name = ([4:7-8], "\\C"); sc_tparams = [];
       sc_where_constraints = []; sc_extends = []; sc_uses = [];
       sc_xhp_attr_uses = []; sc_req_extends = []; sc_req_implements = [];
       sc_implements = []; sc_implements_dynamic = false; sc_consts = [];
       sc_typeconsts =
       [{ Shallow_decl_defs.stc_abstract = Typing_defs.TCConcrete;
          stc_constraint = None; stc_name = ([5:14-15], "T");
          stc_type =
          (Some (Rhint (root|classes_typeconst.php line 5, characters 18-20),
                 (Tprim Tint)));
          stc_enforceable = ([Pos.none], false); stc_reifiable = None };
         { Shallow_decl_defs.stc_abstract = Typing_defs.TCConcrete;
           stc_constraint = None; stc_name = ([15:14-16], "T2");
           stc_type =
           (Some (Rhint (root|classes_typeconst.php line 15, characters 19-24),
                  (Tprim Tstring)));
           stc_enforceable = ([Pos.none], false); stc_reifiable = None }
         ];
       sc_props = []; sc_sprops = []; sc_constructor = None;
       sc_static_methods = [];
       sc_methods =
       [{ Shallow_decl_defs.sm_name = ([7:19-20], "f"); sm_reactivity = None;
          sm_type =
          (Rwitness (root|classes_typeconst.php line 7, characters 19-19),
           (Tfun
              { ft_arity = (Fstandard ()); ft_tparams = [];
                ft_where_constraints = []; ft_params = [];
                ft_implicit_params = { capability = (CapDefaults [7:19-20]) };
                ft_ret =
                { et_enforced = false;
                  et_type =
                  (Rhint (root|classes_typeconst.php line 7, characters 24-30),
                   (Taccess
                      ((Rhint (root|classes_typeconst.php line 7, characters 24-30),
                        Tthis),
                       [([7:30-31], "T")])))
                  };
                ft_flags =
                (make_ft_flags FSync None ~return_disposable:false
                  ~returns_mutable:false ~returns_void_to_rx:false);
                ft_reactive = Nonreactive; ft_ifc_decl = FDPolicied {PUBLIC}
                }));
          sm_visibility = Public; sm_deprecated = None; sm_flags = (empty) };
         { Shallow_decl_defs.sm_name = ([11:19-20], "g");
           sm_reactivity = None;
           sm_type =
           (Rwitness (root|classes_typeconst.php line 11, characters 19-19),
            (Tfun
               { ft_arity = (Fstandard ()); ft_tparams = [];
                 ft_where_constraints = []; ft_params = [];
                 ft_implicit_params =
                 { capability = (CapDefaults [11:19-20]) };
                 ft_ret =
                 { et_enforced = false;
                   et_type =
                   (Rhint (root|classes_typeconst.php line 11, characters 24-31),
                    (Taccess
                       ((Rhint (root|classes_typeconst.php line 11, characters 24-31),
                         Tthis),
                        [([11:30-32], "T2")])))
                   };
                 ft_flags =
                 (make_ft_flags FSync None ~return_disposable:false
                   ~returns_mutable:false ~returns_void_to_rx:false);
                 ft_reactive = Nonreactive; ft_ifc_decl = FDPolicied {PUBLIC}
                 }));
           sm_visibility = Public; sm_deprecated = None; sm_flags = (empty) }
         ];
       sc_user_attributes = []; sc_enum_type = None }));
  ("\\C2",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cabstract;
        sc_name = ([18:16-18], "\\C2"); sc_tparams = [];
        sc_where_constraints = []; sc_extends = []; sc_uses = [];
        sc_xhp_attr_uses = []; sc_req_extends = []; sc_req_implements = [];
        sc_implements = []; sc_implements_dynamic = false; sc_consts = [];
        sc_typeconsts =
        [{ Shallow_decl_defs.stc_abstract = (Typing_defs.TCAbstract None);
           stc_constraint =
           (Some (Rhint (root|classes_typeconst.php line 19, characters 37-37),
                  (Tapply (([19:37-38], "\\C"), []))));
           stc_name = ([19:23-33], "TConstType"); stc_type = None;
           stc_enforceable = ([Pos.none], false); stc_reifiable = None }
          ];
        sc_props = []; sc_sprops = []; sc_constructor = None;
        sc_static_methods = [];
        sc_methods =
        [{ Shallow_decl_defs.sm_name = ([20:28-39], "instantiate");
           sm_reactivity = None;
           sm_type =
           (Rwitness (root|classes_typeconst.php line 20, characters 28-38),
            (Tfun
               { ft_arity = (Fstandard ()); ft_tparams = [];
                 ft_where_constraints = [];
                 ft_params =
                 [{ fp_pos = [20:60-68]; fp_name = (Some "$request");
                    fp_type =
                    { et_enforced = false;
                      et_type =
                      (Rhint (root|classes_typeconst.php line 20, characters 40-58),
                       (Taccess
                          ((Rhint (root|classes_typeconst.php line 20, characters 40-58),
                            (Taccess
                               ((Rhint (root|classes_typeconst.php line 20, characters 40-58),
                                 Tthis),
                                [([20:46-56], "TConstType")]))),
                           [([20:58-59], "T")])))
                      };
                    fp_rx_annotation = None;
                    fp_flags =
                    (make_fp_flags ~mutability:None ~accept_disposable:false
                      ~has_default:false ~mode:Typing_defs_core.FPnormal
                      ~ifc_external:false ~ifc_can_call:false ~is_atom:false);
                     }
                   ];
                 ft_implicit_params =
                 { capability = (CapDefaults [20:28-39]) };
                 ft_ret =
                 { et_enforced = false;
                   et_type =
                   (Rhint (root|classes_typeconst.php line 20, characters 71-86),
                    (Taccess
                       ((Rhint (root|classes_typeconst.php line 20, characters 71-86),
                         Tthis),
                        [([20:77-87], "TConstType")])))
                   };
                 ft_flags =
                 (make_ft_flags FSync None ~return_disposable:false
                   ~returns_mutable:false ~returns_void_to_rx:false);
                 ft_reactive = Nonreactive; ft_ifc_decl = FDPolicied {PUBLIC}
                 }));
           sm_visibility = Public; sm_deprecated = None; sm_flags = abstract
           }
          ];
        sc_user_attributes = []; sc_enum_type = None }))
  ]

They matched!
