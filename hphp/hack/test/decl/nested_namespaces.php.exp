[("\\MyNamespace\\MyString",
  (Shallow_decl_defs.Typedef
     { Typing_defs.td_pos = [5:8-16]; td_vis = Transparent; td_tparams = [];
       td_constraint = None;
       td_type =
       (Rhint (root|nested_namespaces.php line 5, characters 19-24),
        (Tprim Tstring))
       }));
  ("\\MyNamespace\\MyInt",
   (Shallow_decl_defs.Typedef
      { Typing_defs.td_pos = [6:8-13]; td_vis = Transparent; td_tparams = [];
        td_constraint = None;
        td_type =
        (Rhint (root|nested_namespaces.php line 6, characters 16-18),
         (Tprim Tint))
        }));
  ("\\MyNamespace\\MyFloat",
   (Shallow_decl_defs.Typedef
      { Typing_defs.td_pos = [7:8-15]; td_vis = Transparent; td_tparams = [];
        td_constraint = None;
        td_type =
        (Rhint (root|nested_namespaces.php line 7, characters 18-22),
         (Tprim Tfloat))
        }));
  ("\\MyNamespace\\MyNum",
   (Shallow_decl_defs.Typedef
      { Typing_defs.td_pos = [8:8-13]; td_vis = Transparent; td_tparams = [];
        td_constraint = None;
        td_type =
        (Rhint (root|nested_namespaces.php line 8, characters 16-18),
         (Tprim Tnum))
        }));
  ("\\MyNamespace\\MyBool",
   (Shallow_decl_defs.Typedef
      { Typing_defs.td_pos = [9:8-14]; td_vis = Transparent; td_tparams = [];
        td_constraint = None;
        td_type =
        (Rhint (root|nested_namespaces.php line 9, characters 17-20),
         (Tprim Tbool))
        }));
  ("\\MyNamespace\\MyNamespacedType",
   (Shallow_decl_defs.Typedef
      { Typing_defs.td_pos = [11:8-24]; td_vis = Transparent;
        td_tparams = []; td_constraint = None;
        td_type =
        (Rhint (root|nested_namespaces.php line 11, characters 27-47),
         (Tapply (([11:27-48], "\\MyNamespace\\MyString"), [])))
        }));
  ("\\MyNamespace\\InnerNamespace\\MyInnerType",
   (Shallow_decl_defs.Typedef
      { Typing_defs.td_pos = [14:10-21]; td_vis = Transparent;
        td_tparams = []; td_constraint = None;
        td_type =
        (Rhint (root|nested_namespaces.php line 14, characters 24-29),
         (Tprim Tstring))
        }));
  ("\\MyNamespace\\InnerNamespace\\MyDoubleNamespacedType",
   (Shallow_decl_defs.Typedef
      { Typing_defs.td_pos = [15:10-32]; td_vis = Transparent;
        td_tparams = []; td_constraint = None;
        td_type =
        (Rhint (root|nested_namespaces.php line 15, characters 35-63),
         (Tapply (([15:35-64], "\\MyNamespace\\MyNamespacedType"), [])))
        }));
  ("\\MyNamespace\\Very\\Inner\\Namespace\\MyVeryInnerNamespaceType",
   (Shallow_decl_defs.Typedef
      { Typing_defs.td_pos = [19:10-34]; td_vis = Transparent;
        td_tparams = []; td_constraint = None;
        td_type =
        (Rhint (root|nested_namespaces.php line 19, characters 37-42),
         (Tprim Tstring))
        }));
  ("\\MyNamespace\\Very\\Inner\\Namespace\\MyClass",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cnormal;
        sc_name =
        ([20:11-18], "\\MyNamespace\\Very\\Inner\\Namespace\\MyClass");
        sc_tparams = []; sc_where_constraints = []; sc_extends = [];
        sc_uses = []; sc_xhp_attr_uses = []; sc_req_extends = [];
        sc_req_implements = []; sc_implements = [];
        sc_implements_dynamic = false; sc_consts = []; sc_typeconsts = [];
        sc_props = []; sc_sprops = []; sc_constructor = None;
        sc_static_methods = []; sc_methods = []; sc_user_attributes = [];
        sc_enum_type = None }));
  ("\\MyNamespace\\MyVeryInnerNamespaceType",
   (Shallow_decl_defs.Typedef
      { Typing_defs.td_pos = [23:8-32]; td_vis = Transparent;
        td_tparams = []; td_constraint = None;
        td_type =
        (Rhint (root|nested_namespaces.php line 23, characters 35-79),
         (Tapply (
            ([23:35-80],
             "\\MyNamespace\\Very\\Inner\\Namespace\\MyVeryInnerNamespaceType"),
            [])))
        }));
  ("\\MyNamespace\\hello",
   (Shallow_decl_defs.Const
      { Typing_defs.cd_pos = [24:34-39];
        cd_type =
        (Rhint (root|nested_namespaces.php line 24, characters 9-32),
         (Tapply (([24:9-33], "\\MyNamespace\\MyVeryInnerNamespaceType"), 
            [])))
        }))
  ]

They matched!
