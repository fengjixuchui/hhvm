[("\\C",
  (Shallow_decl_defs.Class
     { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
       sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cnormal;
       sc_name = ([3:7-8], "\\C"); sc_tparams = [];
       sc_where_constraints = []; sc_extends = []; sc_uses = [];
       sc_xhp_attr_uses = []; sc_req_extends = []; sc_req_implements = [];
       sc_implements = []; sc_implements_dynamic = false; sc_consts = [];
       sc_typeconsts = []; sc_props = []; sc_sprops = [];
       sc_constructor = None; sc_static_methods = [];
       sc_methods =
       [{ Shallow_decl_defs.sm_name = ([4:19-20], "f"); sm_reactivity = None;
          sm_type =
          (Rwitness (root|unnamed_variadic_method_parameter.php line 4, characters 19-19),
           (Tfun
              { ft_arity =
                (Fvariadic (
                   { fp_pos = [4:31-34]; fp_name = None;
                     fp_type =
                     { et_enforced = false;
                       et_type =
                       (Rwitness (root|unnamed_variadic_method_parameter.php line 4, characters 31-33),
                        Tany)
                       };
                     fp_rx_annotation = None;
                     fp_flags =
                     (make_fp_flags ~mutability:None ~accept_disposable:false
                       ~has_default:false ~mode:Typing_defs_core.FPnormal
                       ~ifc_external:false ~ifc_can_call:false ~is_atom:false
                       ~readonly:false);
                      }
                   ));
                ft_tparams = []; ft_where_constraints = [];
                ft_params =
                [{ fp_pos = [4:25-29]; fp_name = (Some "$foo");
                   fp_type =
                   { et_enforced = false;
                     et_type =
                     (Rhint (root|unnamed_variadic_method_parameter.php line 4, characters 21-23),
                      (Tprim Tint))
                     };
                   fp_rx_annotation = None;
                   fp_flags =
                   (make_fp_flags ~mutability:None ~accept_disposable:false
                     ~has_default:false ~mode:Typing_defs_core.FPnormal
                     ~ifc_external:false ~ifc_can_call:false ~is_atom:false
                     ~readonly:false);
                    }
                  ];
                ft_implicit_params = { capability = (CapDefaults [4:19-20]) };
                ft_ret =
                { et_enforced = false;
                  et_type =
                  (Rhint (root|unnamed_variadic_method_parameter.php line 4, characters 37-40),
                   (Tprim Tvoid))
                  };
                ft_flags =
                (make_ft_flags FSync None ~return_disposable:false
                  ~returns_mutable:false ~returns_void_to_rx:false
                  ~returns_readonly:false ~readonly_this:false);
                ft_reactive = Nonreactive; ft_ifc_decl = FDPolicied {PUBLIC}
                }));
          sm_visibility = Public; sm_deprecated = None; sm_flags = (empty) }
         ];
       sc_user_attributes = []; sc_enum_type = None }))
  ]

They matched!
