--- legacy
+++ direct decl
@@ -1,76 +1,66 @@
 [("\\MyParent",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cnormal;
        sc_name = ([4:7-15], "\\MyParent"); sc_tparams = [];
        sc_where_constraints = []; sc_extends = []; sc_uses = [];
        sc_xhp_attr_uses = []; sc_req_extends = []; sc_req_implements = [];
        sc_implements = []; sc_implements_dynamic = false; sc_consts = [];
-       sc_typeconsts =
-       [{ Shallow_decl_defs.stc_abstract = Typing_defs.TCConcrete;
-          stc_constraint = None; stc_name = ([5:13-16], "MyC");
-          stc_type =
-          (Some (Rhint (root|ctx_const_using_named_ctx.php line 5, characters 19-25),
-                 (Tintersection
-                    [(Rhint (root|ctx_const_using_named_ctx.php line 5, characters 20-24),
-                      (Tapply (([5:20-25], "\\HH\\Contexts\\local"), [])))])));
-          stc_enforceable = ([Pos.none], false); stc_reifiable = None }
-         ];
-       sc_props = []; sc_sprops = []; sc_constructor = None;
-       sc_static_methods = [];
+       sc_typeconsts = []; sc_props = []; sc_sprops = [];
+       sc_constructor = None; sc_static_methods = [];
        sc_methods =
        [{ Shallow_decl_defs.sm_name = ([6:19-37], "callsRequiresLocal");
           sm_reactivity = None;
           sm_type =
           (Rwitness (root|ctx_const_using_named_ctx.php line 6, characters 19-36),
            (Tfun
               { ft_arity = (Fstandard ()); ft_tparams = [];
                 ft_where_constraints = []; ft_params = [];
                 ft_implicit_params =
                 { capability =
                   (CapTy (Rhint (root|ctx_const_using_named_ctx.php line 6, characters 40-48),
                           (Taccess
                              ((Rhint (root|ctx_const_using_named_ctx.php line 6, characters 40-48),
                                (Tapply (([4:7-15], "\\MyParent"), []))),
                               [([6:46-49], "MyC")]))))
                   };
                 ft_ret =
                 { et_enforced = false;
                   et_type =
                   (Rhint (root|ctx_const_using_named_ctx.php line 6, characters 52-55),
                    (Tprim Tvoid))
                   };
                 ft_flags =
                 (make_ft_flags FSync None ~return_disposable:false
                   ~returns_mutable:false ~returns_void_to_rx:false);
                 ft_reactive = Nonreactive; ft_ifc_decl = FDPolicied {PUBLIC}
                 }));
           sm_visibility = Public; sm_deprecated = None; sm_flags = (empty) };
          { Shallow_decl_defs.sm_name = ([9:19-32], "requiresLocal");
            sm_reactivity = None;
            sm_type =
            (Rwitness (root|ctx_const_using_named_ctx.php line 9, characters 19-31),
             (Tfun
                { ft_arity = (Fstandard ()); ft_tparams = [];
                  ft_where_constraints = []; ft_params = [];
                  ft_implicit_params =
                  { capability =
                    (CapTy (Rhint (root|ctx_const_using_named_ctx.php line 9, characters 35-39),
                            (Tapply (([9:35-40], "\\HH\\Contexts\\local"), 
                               []))))
                    };
                  ft_ret =
                  { et_enforced = false;
                    et_type =
                    (Rhint (root|ctx_const_using_named_ctx.php line 9, characters 43-46),
                     (Tprim Tvoid))
                    };
                  ft_flags =
                  (make_ft_flags FSync None ~return_disposable:false
                    ~returns_mutable:false ~returns_void_to_rx:false);
                  ft_reactive = Nonreactive; ft_ifc_decl = FDPolicied {PUBLIC}
                  }));
            sm_visibility = Public; sm_deprecated = None; sm_flags = (empty) }
          ];
        sc_user_attributes = []; sc_enum_type = None }))
   ]
