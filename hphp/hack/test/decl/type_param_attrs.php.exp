[("\\A",
  (Shallow_decl_defs.Class
     { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
       sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cnormal;
       sc_name = ([3:7-8], "\\A"); sc_tparams = [];
       sc_where_constraints = []; sc_extends = []; sc_uses = [];
       sc_xhp_attr_uses = []; sc_req_extends = []; sc_req_implements = [];
       sc_implements =
       [(Rhint (root|type_param_attrs.php line 3, characters 20-44),
         (Tapply (([3:20-45], "\\HH\\TypeParameterAttribute"), [])))];
       sc_implements_dynamic = false; sc_consts = []; sc_typeconsts = [];
       sc_props = []; sc_sprops = [];
       sc_constructor =
       (Some { Shallow_decl_defs.sm_name = ([4:19-30], "__construct");
               sm_reactivity = None;
               sm_type =
               (Rwitness (root|type_param_attrs.php line 4, characters 19-29),
                (Tfun
                   { ft_arity = (Fstandard ()); ft_tparams = [];
                     ft_where_constraints = []; ft_params = [];
                     ft_implicit_params =
                     { capability = (CapDefaults [4:19-30]) };
                     ft_ret =
                     { et_enforced = false;
                       et_type =
                       (Rwitness (root|type_param_attrs.php line 4, characters 19-29),
                        (Tprim Tvoid))
                       };
                     ft_flags =
                     (make_ft_flags FSync None ~return_disposable:false
                       ~returns_mutable:false ~returns_void_to_rx:false);
                     ft_reactive = Nonreactive;
                     ft_ifc_decl = FDPolicied {PUBLIC} }));
               sm_visibility = Public; sm_deprecated = None;
               sm_flags = (empty) });
       sc_static_methods = []; sc_methods = []; sc_user_attributes = [];
       sc_enum_type = None }));
  ("\\C",
   (Shallow_decl_defs.Class
      { Shallow_decl_defs.sc_mode = Mstrict; sc_final = false;
        sc_is_xhp = false; sc_has_xhp_keyword = false; sc_kind = Cnormal;
        sc_name = ([7:7-8], "\\C");
        sc_tparams =
        [{ Typing_defs_core.tp_variance = Invariant;
           tp_name = ([7:36-38], "T1"); tp_tparams = []; tp_constraints = [];
           tp_reified = Reified;
           tp_user_attributes =
           [{ Typing_defs_core.ua_name = ([7:26-27], "\\A");
              ua_classname_params = [] };
             { Typing_defs_core.ua_name = ([7:11-24], "__Enforceable");
               ua_classname_params = [] }
             ]
           }
          ];
        sc_where_constraints = []; sc_extends = []; sc_uses = [];
        sc_xhp_attr_uses = []; sc_req_extends = []; sc_req_implements = [];
        sc_implements = []; sc_implements_dynamic = false; sc_consts = [];
        sc_typeconsts = []; sc_props = []; sc_sprops = [];
        sc_constructor = None; sc_static_methods = []; sc_methods = [];
        sc_user_attributes = []; sc_enum_type = None }))
  ]

They matched!
